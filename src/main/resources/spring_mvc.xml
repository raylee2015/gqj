<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans.xsd    
    http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context.xsd    
    http://www.springframework.org/schema/mvc    
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.*" />

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<!--配置拦截器, 多个拦截器,顺序执行 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**" />
			<bean class="com.base.admin.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>


	<!-- 针对freemarker的视图配置 -->
	<!-- <bean id="freemarkerConfig" -->
	<!-- class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> -->
	<!-- <property name="templateLoaderPath" value="/WEB-INF/sample/" /> -->
	<!-- <property name="templateLoaderPaths"> -->
	<!-- <list> -->
	<!-- <value>/WEB-INF/view/</value> -->
	<!-- <value>/WEB-INF/sample/</value> -->
	<!-- <value>/WEB-INF/base/admin/</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="defaultEncoding" value="utf-8" /> -->
	<!-- <property name="freemarkerSettings"> -->
	<!-- <props> -->
	<!-- <prop key="template_update_delay">0</prop> -->
	<!-- <prop key="locale">zh_CN</prop> -->
	<!-- <prop key="datetime_format">yyyy-MM-dd</prop> -->
	<!-- <prop key="date_format">yyyy-MM-dd</prop> -->
	<!-- <prop key="number_format">#.##</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean id="viewResolver" -->
	<!-- class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> -->
	<!-- <property name="viewClass" -->
	<!-- value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property> -->
	<!-- <property name="suffix" value=".html" /> -->
	<!-- <property name="contentType" value="text/html;charset=utf-8" /> -->
	<!-- <property name="exposeRequestAttributes" value="true" /> -->
	<!-- <property name="exposeSessionAttributes" value="true" /> -->
	<!-- <property name="exposeSpringMacroHelpers" value="true" /> -->
	<!-- <property name="requestContextAttribute" value="request" /> -->
	<!-- <property name="cache" value="false" /> -->
	<!-- </bean> -->

</beans>  